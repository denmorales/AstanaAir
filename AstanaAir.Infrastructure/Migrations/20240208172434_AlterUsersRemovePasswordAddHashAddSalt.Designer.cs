// <auto-generated />
using System;
using AstanaAir.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AstanaAir.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240208172434_AlterUsersRemovePasswordAddHashAddSalt")]
    partial class AlterUsersRemovePasswordAddHashAddSalt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AstanaAir.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Arrival")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Departure")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Code = "User"
                        },
                        new
                        {
                            Id = 1,
                            Code = "Moderator"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hash = "9D93F5BF540C13024D5F162B121B1B2683EBEBEA93F59CCCDF1ACB0935975481FDA9037B1F9F44080DBC32666A39E1C83BFF9ADA776E7A6D6C8FBFB10C10853A",
                            RoleId = 2,
                            Salt = new byte[] { 169, 31, 44, 94, 7, 136, 31, 50, 212, 153, 147, 111, 171, 36, 114, 200, 145, 105, 153, 94, 19, 175, 170, 120, 246, 45, 122, 58, 60, 62, 134, 134, 208, 212, 243, 43, 123, 109, 102, 28, 238, 112, 107, 213, 83, 244, 34, 118, 55, 214, 214, 44, 237, 73, 183, 64, 191, 26, 234, 25, 93, 117, 71, 135 },
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Hash = "5DEBAD4B96E1C84F66A3966295531734A0DE58015876CA67F34D20D443504C6E7B6D89D2C0FF50D831C5CF6220F5323514813307AF97BD5F4C047B34573C9AFF",
                            RoleId = 1,
                            Salt = new byte[] { 241, 179, 55, 28, 171, 129, 200, 209, 37, 126, 253, 79, 63, 254, 253, 220, 238, 200, 98, 204, 74, 201, 254, 187, 198, 84, 217, 166, 249, 3, 238, 144, 139, 237, 162, 26, 213, 144, 91, 219, 218, 120, 166, 251, 220, 188, 28, 90, 190, 88, 114, 125, 111, 47, 224, 106, 9, 136, 22, 10, 142, 47, 137, 83 },
                            UserName = "moderator1"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.User", b =>
                {
                    b.HasOne("AstanaAir.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
