// <auto-generated />
using System;
using AstanaAir.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AstanaAir.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240209100620_CreateAirportsTable")]
    partial class CreateAirportsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AstanaAir.Domain.Entities.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Offset")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "VNK",
                            Name = "Внуково",
                            Offset = (short)3
                        },
                        new
                        {
                            Id = 2,
                            Code = "EKB",
                            Name = "Екатеринбург",
                            Offset = (short)5
                        },
                        new
                        {
                            Id = 3,
                            Code = "SRT",
                            Name = "Саратов",
                            Offset = (short)4
                        },
                        new
                        {
                            Id = 4,
                            Code = "ALM",
                            Name = "Алматы",
                            Offset = (short)6
                        },
                        new
                        {
                            Id = 5,
                            Code = "MGD",
                            Name = "Магадан",
                            Offset = (short)11
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Arrival")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Departure")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            Arrival = new DateTimeOffset(new DateTime(2024, 2, 9, 13, 6, 20, 661, DateTimeKind.Unspecified).AddTicks(5693), new TimeSpan(0, 3, 0, 0, 0)),
                            Departure = new DateTimeOffset(new DateTime(2024, 2, 10, 1, 6, 20, 661, DateTimeKind.Unspecified).AddTicks(5720), new TimeSpan(0, 3, 0, 0, 0)),
                            Destination = "Аэропорт2",
                            Origin = "Аэропорт1",
                            Status = "InTime"
                        },
                        new
                        {
                            Id = 1001,
                            Arrival = new DateTimeOffset(new DateTime(2024, 2, 9, 13, 6, 20, 661, DateTimeKind.Unspecified).AddTicks(5731), new TimeSpan(0, 3, 0, 0, 0)),
                            Departure = new DateTimeOffset(new DateTime(2024, 2, 10, 1, 6, 20, 661, DateTimeKind.Unspecified).AddTicks(5732), new TimeSpan(0, 3, 0, 0, 0)),
                            Destination = "Аэропорт4",
                            Origin = "Аэропорт3",
                            Status = "Cancelled"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Code = "User"
                        },
                        new
                        {
                            Id = 1,
                            Code = "Moderator"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hash = "929E3998E77C0626C0FA4BCA88305DAEE7F874E52DF367A34BE3FA80DC0E6844869B4DCE6EE73FF9B6654ECD826AB12951054B4EDB9BA074C6DBD0709F77344C",
                            RoleId = 2,
                            Salt = new byte[] { 175, 186, 81, 95, 139, 85, 40, 73, 86, 91, 111, 105, 251, 32, 0, 32, 141, 210, 182, 234, 98, 66, 203, 217, 19, 120, 73, 240, 223, 212, 54, 1, 85, 57, 64, 236, 134, 141, 195, 24, 81, 85, 10, 78, 69, 217, 95, 200, 181, 246, 102, 127, 246, 246, 177, 210, 12, 103, 92, 38, 182, 41, 230, 112 },
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Hash = "C153B0CBEF7746F4C24E3DD9E8761F80AD0BEBBACE93731A7FADF60C2EFAF744C5875D2DC4C1F35A8B4EC6241528A8C7BF70B88F7107685CF7AA7E0D2BFDE827",
                            RoleId = 1,
                            Salt = new byte[] { 220, 249, 165, 150, 125, 41, 140, 4, 77, 28, 154, 199, 161, 106, 57, 125, 234, 238, 250, 21, 61, 145, 234, 24, 231, 77, 165, 40, 213, 176, 210, 194, 115, 254, 214, 181, 17, 241, 240, 39, 10, 102, 67, 36, 39, 37, 28, 18, 100, 216, 142, 249, 91, 119, 139, 40, 24, 70, 2, 238, 120, 242, 106, 240 },
                            UserName = "moderator1"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.User", b =>
                {
                    b.HasOne("AstanaAir.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
