// <auto-generated />
using System;
using AstanaAir.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AstanaAir.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240208184839_AddDataInFlights")]
    partial class AddDataInFlights
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AstanaAir.Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Arrival")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Departure")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            Arrival = new DateTimeOffset(new DateTime(2024, 2, 8, 21, 48, 39, 11, DateTimeKind.Unspecified).AddTicks(4808), new TimeSpan(0, 3, 0, 0, 0)),
                            Departure = new DateTimeOffset(new DateTime(2024, 2, 9, 9, 48, 39, 11, DateTimeKind.Unspecified).AddTicks(4833), new TimeSpan(0, 3, 0, 0, 0)),
                            Destination = "Аэропорт2",
                            Origin = "Аэропорт1",
                            Status = "InTime"
                        },
                        new
                        {
                            Id = 1001,
                            Arrival = new DateTimeOffset(new DateTime(2024, 2, 8, 21, 48, 39, 11, DateTimeKind.Unspecified).AddTicks(4843), new TimeSpan(0, 3, 0, 0, 0)),
                            Departure = new DateTimeOffset(new DateTime(2024, 2, 9, 9, 48, 39, 11, DateTimeKind.Unspecified).AddTicks(4844), new TimeSpan(0, 3, 0, 0, 0)),
                            Destination = "Аэропорт4",
                            Origin = "Аэропорт3",
                            Status = "Cancelled"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Code = "User"
                        },
                        new
                        {
                            Id = 1,
                            Code = "Moderator"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hash = "3E47526631F5D3119446D6547C8E04061A85A14AD253EAEE2289AF421880D1248A343C48892C46065DB5E6A7D9AB80BD79A05673DBEECFB3D4BDCB9D1B225C44",
                            RoleId = 2,
                            Salt = new byte[] { 55, 58, 240, 164, 181, 135, 94, 59, 39, 190, 65, 20, 183, 117, 205, 50, 14, 141, 45, 36, 115, 49, 39, 52, 247, 52, 141, 0, 194, 224, 240, 236, 41, 90, 187, 88, 160, 188, 99, 47, 41, 124, 165, 58, 118, 193, 81, 182, 225, 1, 45, 64, 115, 107, 164, 244, 39, 180, 236, 68, 160, 32, 101, 227 },
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Hash = "D8E2F7EB9088CB4CA995E23A165ED1AB19A07B034DD5BA5DC48B9B3CB044D76D7FC11D5E7ED5286C79579B95620D35C82108FFE2B955B7B0A149477A4935A32A",
                            RoleId = 1,
                            Salt = new byte[] { 164, 163, 156, 234, 31, 42, 162, 154, 5, 93, 179, 223, 216, 58, 76, 199, 39, 12, 0, 242, 107, 125, 152, 14, 181, 179, 65, 253, 167, 21, 185, 124, 142, 124, 213, 78, 35, 57, 66, 18, 6, 81, 120, 228, 228, 233, 40, 176, 106, 89, 126, 249, 210, 165, 193, 70, 98, 118, 45, 127, 33, 69, 130, 132 },
                            UserName = "moderator1"
                        });
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.User", b =>
                {
                    b.HasOne("AstanaAir.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AstanaAir.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
